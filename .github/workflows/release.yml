name: Release - Package app

# Controls when the workflow will run
on:
  release:
    types: [created]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Generate ID
        id: repository_info
        run: |
          export ID=$(printf ${{github.repository}} | sed "s/.*\///g")
          echo "::set-output name=ID::$ID"

      - name: Generate SHA256 and PACKAGE_SOURCE
        working-directory: src
        env:
          ID: ${{ steps.repository_info.outputs.ID }}
        run: |
          zip ../$ID-${{github.ref_name}}.zip -r *
  
      - name: Upload files to a GitHub release
        uses: svenstaro/upload-release-action@2.2.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{github.ref}}
          file: ${{ steps.repository_info.outputs.ID }}-${{github.ref_name}}.zip
  
      - name: Generate SHA256 and PACKAGE_SOURCE
        id: release_info
        env:
          ID: ${{ steps.repository_info.outputs.ID }}
        run: |
          export SHA256=$(sha256sum $ID-${{github.ref_name}}.zip | awk '{print $1}')
          echo "::set-output name=SHA256::$SHA256"
          export PACKAGE_SOURCE=https://github.com/${{github.repository}}/releases/download/${{github.ref_name}}/$ID-${{github.ref_name}}.zip
          echo "::set-output name=PACKAGE_SOURCE::$PACKAGE_SOURCE"

      - name: Air Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.AIR_ACCESS_TOKEN }}
          repository: alis-is/air
          event-type: app-release
          client-payload: '{ "id": "${{ steps.repository_info.outputs.ID }}", "repository": "${{github.repository}}", "version": "${{github.ref_name}}", "package": "${{ steps.release_info.outputs.PACKAGE_SOURCE }}", "sha256": "${{ steps.release_info.outputs.SHA256 }}"}'
      
        
          
          
